terraform {
  required_version = ">= 1.0"
  required_providers {
    aws = { source = "hashicorp/aws", version = "~> 5.0" }
  }
}

############################
# QUOTA REQUESTS (4 blocks)
############################
resource "aws_servicequotas_service_quota" "sg_rules_us_east_1" {
  count        = contains(var.target_regions, "us-east-1") && var.enable_quota_automation ? 1 : 0
  provider     = aws.us_east_1
  service_code = var.quota_service_code
  quota_code   = var.quota_code
  value        = var.default_target_quota_value
}

resource "aws_servicequotas_service_quota" "sg_rules_eu_west_2" {
  count        = contains(var.target_regions, "eu-west-2") && var.enable_quota_automation ? 1 : 0
  provider     = aws.eu_west_2
  service_code = var.quota_service_code
  quota_code   = var.quota_code
  value        = var.default_target_quota_value
}

resource "aws_servicequotas_service_quota" "sg_rules_ap_southeast_1" {
  count        = contains(var.target_regions, "ap-southeast-1") && var.enable_quota_automation ? 1 : 0
  provider     = aws.ap_southeast_1
  service_code = var.quota_service_code
  quota_code   = var.quota_code
  value        = var.default_target_quota_value
}

resource "aws_servicequotas_service_quota" "sg_rules_us_west_2" {
  count        = contains(var.target_regions, "us-west-2") && var.enable_quota_automation ? 1 : 0
  provider     = aws.us_west_2
  service_code = var.quota_service_code
  quota_code   = var.quota_code
  value        = var.default_target_quota_value
}

############################
# DATA SOURCES FOR OUTPUT
############################
data "aws_servicequotas_service_quota" "live_us_east_1" {
  count        = aws_servicequotas_service_quota.sg_rules_us_east_1.*.id != [] ? 1 : 0
  provider     = aws.us_east_1
  service_code = var.quota_service_code
  quota_code   = var.quota_code
}

# repeat for other three regions
data "aws_servicequotas_service_quota" "live_eu_west_2" {
  count        = aws_servicequotas_service_quota.sg_rules_eu_west_2.*.id != [] ? 1 : 0
  provider     = aws.eu_west_2
  service_code = var.quota_service_code
  quota_code   = var.quota_code
}

data "aws_servicequotas_service_quota" "live_ap_southeast_1" {
  count        = aws_servicequotas_service_quota.sg_rules_ap_southeast_1.*.id != [] ? 1 : 0
  provider     = aws.ap_southeast_1
  service_code = var.quota_service_code
  quota_code   = var.quota_code
}

data "aws_servicequotas_service_quota" "live_us_west_2" {
  count        = aws_servicequotas_service_quota.sg_rules_us_west_2.*.id != [] ? 1 : 0
  provider     = aws.us_west_2
  service_code = var.quota_service_code
  quota_code   = var.quota_code
}

output "security_group_quota_values" {
  value = {
    us-east-1      = data.aws_servicequotas_service_quota.live_us_east_1.*.value[0]
    eu-west-2      = data.aws_servicequotas_service_quota.live_eu_west_2.*.value[0]
    ap-southeast-1 = data.aws_servicequotas_service_quota.live_ap_southeast_1.*.value[0]
    us-west-2      = data.aws_servicequotas_service_quota.live_us_west_2.*.value[0]
  }
}