# service_quotas.jinja - AFT Global Customizations template
# This template automatically requests Security Group quota increases for new accounts
# Generated by AFT Global Customizations framework

terraform {
  required_version = ">= 1.0"
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

# US-East-1 provider alias (required for global Security Group quotas)
# This MUST be us-east-1 regardless of account's primary region
# Note: AFT already provides default provider, so we only need the alias
provider "aws" {
  alias  = "us_east_1"
  region = "us-east-1"
  
  default_tags {
    tags = {
      Project     = "AFT-Security-Group-Quota-Automation"
      Environment = "production"
      ManagedBy   = "AFT-Global-Customizations"
      Purpose     = "Security-Group-Quota-Automation"
      Timestamp   = "{{ timestamp }}"
    }
  }
}

# Data source to get current caller identity (account ID)
data "aws_caller_identity" "current" {
  provider = aws.us_east_1
}

# Security Group rules quota increase request using direct API approach
# This bypasses the Terraform resource's internal quota checking
resource "null_resource" "sg_quota_request" {
  triggers = {
    account_id = data.aws_caller_identity.current.account_id
    timestamp  = var.aft_timestamp
  }
  
  provisioner "local-exec" {
    command = <<-EOF
      aws servicequotas request-service-quota-increase \
        --service-code ${var.quota_service_code} \
        --quota-code ${var.quota_code} \
        --desired-value ${var.target_quota_value} \
        --region us-east-1 > /tmp/quota-request-${data.aws_caller_identity.current.account_id}.json 2>&1 || echo "Request may already exist"
      echo "Quota request submitted for account ${data.aws_caller_identity.current.account_id}"
    EOF
  }
}

# Outputs for AFT logging and validation
output "aft_security_group_quota_info" {
  description = "Security Group quota automation results"
  value = {
    account_id       = data.aws_caller_identity.current.account_id
    primary_region   = var.account_region
    quota_region     = "us-east-1"
    timestamp        = var.aft_timestamp
    service_code     = var.quota_service_code
    quota_code       = var.quota_code
    requested_value  = var.target_quota_value
    method          = "AWS CLI direct API call"
  }
}

output "aft_next_steps" {
  description = "Next steps for quota request monitoring"
  value = [
    "1. Check AWS Service Quotas console in us-east-1 for request status",
    "2. Look for Service: VPC, Quota: Rules per security group",
    "3. AWS will review and approve/deny the request (1-2 business days)",
    "4. Quota will be automatically applied upon AWS approval",
    "5. Request submitted via AWS CLI to avoid permission requirements"
  ]
}

output "aft_quota_automation_metadata" {
  description = "Metadata for quota automation tracking"
  value = {
    name        = "Security-Group-Rules-Quota-${data.aws_caller_identity.current.account_id}"
    description = "Automated quota increase for Security Group rules per SG"
    requested_by = "AFT-Global-Customizations"
    account_id   = data.aws_caller_identity.current.account_id
    environment  = "production"
    timestamp    = var.aft_timestamp
    automation   = "aft-security-group-quota"
    service_code = var.quota_service_code
    quota_code   = var.quota_code
    target_value = var.target_quota_value
    method       = "null_resource with AWS CLI"
    status       = "quota request submitted"
  }
}