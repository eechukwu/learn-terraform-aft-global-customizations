# service_quotas.jinja - AFT Global Customizations template
# DEBUG VERSION - Better error handling to see what's failing

terraform {
  required_version = ">= 1.0"
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

# US-East-1 provider alias (required for global Security Group quotas)
provider "aws" {
  alias  = "us_east_1"
  region = "us-east-1"
  
  # Ensure we're in the target account, not management account
  assume_role {
    role_arn = "{{ target_admin_role_arn }}"
  }
  
  default_tags {
    tags = {
      Project     = "AFT-Security-Group-Quota-Automation"
      Environment = "production"
      ManagedBy   = "AFT-Global-Customizations"
      Purpose     = "Security-Group-Quota-Automation"
      Timestamp   = "{{ timestamp }}"
    }
  }
}

# Data source to get current caller identity (account ID)
data "aws_caller_identity" "current" {
  provider = aws.us_east_1
}

# Debug: Show what account we're actually in
resource "null_resource" "debug_account" {
  provisioner "local-exec" {
    command = <<-EOF
      echo "=== DEBUGGING ACCOUNT CONTEXT ==="
      echo "Current account from data source: ${data.aws_caller_identity.current.account_id}"
      echo "Expected target account: Should be 600771336806"
      echo "AFT Management account: 149781123609"
      
      echo "=== TESTING AWS CLI ACCESS ==="
      aws sts get-caller-identity --region us-east-1 || echo "STS call failed"
      
      echo "=== TESTING SERVICE QUOTAS PERMISSIONS ==="
      aws service-quotas get-service-quota \
        --service-code vpc \
        --quota-code L-0EA8095F \
        --region us-east-1 || echo "Get quota failed"
    EOF
  }
}

# Security Group rules quota increase request with better error handling
resource "null_resource" "sg_quota_request" {
  depends_on = [null_resource.debug_account]
  
  triggers = {
    account_id = data.aws_caller_identity.current.account_id
    timestamp  = var.aft_timestamp
  }
  
  provisioner "local-exec" {
    command = <<-EOF
      echo "=== ATTEMPTING QUOTA REQUEST ==="
      echo "Account: ${data.aws_caller_identity.current.account_id}"
      echo "Service: ${var.quota_service_code}"
      echo "Quota Code: ${var.quota_code}"
      echo "Desired Value: ${var.target_quota_value}"
      echo "Region: us-east-1"
      
      # Try the quota request and capture the actual error
      if aws service-quotas request-service-quota-increase \
        --service-code ${var.quota_service_code} \
        --quota-code ${var.quota_code} \
        --desired-value ${var.target_quota_value} \
        --region us-east-1 > /tmp/quota-request-${data.aws_caller_identity.current.account_id}.json 2>&1; then
        echo "SUCCESS: Quota request submitted"
        echo "Result:"
        cat /tmp/quota-request-${data.aws_caller_identity.current.account_id}.json
      else
        echo "FAILED: Quota request failed"
        echo "Error details:"
        cat /tmp/quota-request-${data.aws_caller_identity.current.account_id}.json
        echo "Exit code: $?"
      fi
    EOF
  }
}

# Outputs for debugging
output "debug_info" {
  description = "Debug information for troubleshooting"
  value = {
    detected_account_id = data.aws_caller_identity.current.account_id
    expected_account_id = "600771336806"
    management_account  = "149781123609"
    provider_region     = "us-east-1"
    quota_details = {
      service_code = var.quota_service_code
      quota_code   = var.quota_code
      target_value = var.target_quota_value
    }
  }
}

# Standard outputs
output "aft_security_group_quota_info" {
  description = "Security Group quota automation results"
  value = {
    account_id       = data.aws_caller_identity.current.account_id
    primary_region   = var.account_region
    quota_region     = "us-east-1"
    timestamp        = var.aft_timestamp
    service_code     = var.quota_service_code
    quota_code       = var.quota_code
    requested_value  = var.target_quota_value
    method          = "AWS CLI direct API call with debugging"
  }
}